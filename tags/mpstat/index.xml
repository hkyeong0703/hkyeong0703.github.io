<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>mpstat - Tag - hkyeong&#39;s blog</title>
        <link>https://hkyeong0703.github.io/tags/mpstat/</link>
        <description>mpstat - Tag - hkyeong&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 13 Jul 2021 21:00:31 &#43;0900</lastBuildDate><atom:link href="https://hkyeong0703.github.io/tags/mpstat/" rel="self" type="application/rss+xml" /><item>
    <title>Linux_system_infomation</title>
    <link>https://hkyeong0703.github.io/posts/linux_system_infomation/</link>
    <pubDate>Tue, 13 Jul 2021 21:00:31 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://hkyeong0703.github.io/posts/linux_system_infomation/</guid>
    <description><![CDATA[DevOps와 SE를 위한 리눅스 커널이야기 를 오랜만에 다시 꺼내 읽어보며, 정리해보려고한다.
1장에서는 리눅스 시스템 구성 정보를 확인하는 방법이 나온다. 시스템의 문제점을 분석하고 확인하는데 제일 기본인 현재 시스템을 파악하는데 필요한 방법을 알아보자.
커널 정보 확인가장 대표적인 방법은 uname 명령을 사용하는 것이다.
1 2  $ uname -a Linux ip-172-31-27-89 5.4.0-1024-aws #24-Ubuntu SMP Sat Sep 5 06:19:55 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux   dmesg 명령을 통해 몇가지 정보를 더 확인 할 수 있다.]]></description>
</item><item>
    <title>리눅스 성능을 분석할 수 있는 명령어</title>
    <link>https://hkyeong0703.github.io/posts/linux_performance_analysis_commands/</link>
    <pubDate>Wed, 12 May 2021 19:52:09 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://hkyeong0703.github.io/posts/linux_performance_analysis_commands/</guid>
    <description><![CDATA[Netflix Tech Blog 60초 내에 Linux 성능 분석 에서 리눅스 명령어를 통해 성능을 분석할 수 있는 방법이 나온다.
번역과 함께 읽으며 내가 찾아본 내용들을 같이 추후 참고용으로 기록해두려고한다.
아래 명령어들을 사용해 60초 안에 리눅스 환경에서 CLI를 이용해 어떤 것들을 확인할지 순서대로 알아보자. 일부 명령어는 sysstat 패키지를 설치해야한다.
1 2 3 4 5 6 7 8 9 10  $ uptime $ dmesg | tail $ vmstat 1 $ mpstat -P ALL 1 $ pidstat 1 $ iostat -xz 1 $ free -m $ sar -n DEV 1 $ sar -n TCP,ETCP 1 $ top   자세히 알아보기uptime1 2  $ uptime 23:51:26 up 21:31, 1 user, load average - 30.]]></description>
</item></channel>
</rss>
